{
  "version": 3,
  "sources": [
    "webpack:///../../../src/mixins/delayable/index.ts",
    "webpack:///../../../src/mixins/stackable/index.ts",
    "webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js",
    "webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js",
    "webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js",
    "webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js",
    "webpack:///../../../src/mixins/activatable/index.ts",
    "webpack:///../../../src/mixins/detachable/index.ts",
    "webpack:///../../../src/mixins/dependent/index.ts"
  ],
  "names": [
    "name",
    "props",
    "openDelay",
    "type",
    "Number",
    "default",
    "closeDelay",
    "data",
    "openTimeout",
    "closeTimeout",
    "undefined",
    "methods",
    "clearDelay",
    "clearTimeout",
    "this",
    "runDelay",
    "delay",
    "parseInt",
    "setTimeout",
    "cb",
    "open",
    "close",
    "stackElement",
    "stackExclude",
    "stackMinZIndex",
    "isActive",
    "computed",
    "activeZIndex",
    "window",
    "content",
    "$refs",
    "index",
    "getMaxZIndex",
    "exclude",
    "base",
    "zis",
    "activeElements",
    "document",
    "Math",
    "_arrayWithoutHoles",
    "arr",
    "Array",
    "isArray",
    "i",
    "arr2",
    "length",
    "_iterableToArray",
    "iter",
    "Symbol",
    "iterator",
    "Object",
    "prototype",
    "toString",
    "call",
    "from",
    "_nonIterableSpread",
    "TypeError",
    "_toConsumableArray",
    "arrayWithoutHoles",
    "iterableToArray",
    "nonIterableSpread",
    "baseMixins",
    "activator",
    "validator",
    "val",
    "includes",
    "disabled",
    "internalActivator",
    "openOnHover",
    "Boolean",
    "activatorElement",
    "activatorNode",
    "events",
    "listeners",
    "watch",
    "mounted",
    "slotType",
    "beforeDestroy",
    "addActivatorEvents",
    "keys",
    "key",
    "genActivator",
    "node",
    "on",
    "attrs",
    "genActivatorAttributes",
    "role",
    "String",
    "genActivatorListeners",
    "e",
    "getActivator",
    "target",
    "vm",
    "m",
    "getContentSlot",
    "getValueProxy",
    "self",
    "removeActivatorEvents",
    "resetActivator",
    "validateAttachTarget",
    "Node",
    "attach",
    "contentClass",
    "hasDetached",
    "hasContent",
    "beforeMount",
    "deactivated",
    "console",
    "getScopeIdAttrs",
    "scopeId",
    "initDetach",
    "_isDestroyed",
    "searchChildren",
    "results",
    "children",
    "child",
    "closeDependents",
    "isDependent",
    "openDependents",
    "getOpenDependents",
    "getOpenDependentElements",
    "result",
    "getClickableDependentElements",
    "overlay"
  ],
  "mappings": "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",
  "file": "js/chunk-ad6186a2.2bf8e17e.js",
  "sourcesContent": [
    "import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n",
    "import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n",
    "export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}",
    "export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}",
    "export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}",
    "import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}",
    "// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave'],\n    listeners: {} as Record<string, (e: MouseEvent & KeyboardEvent) => void>,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Record<string, (e: MouseEvent & KeyboardEvent) => void> = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n",
    "// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n",
    "import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n"
  ],
  "sourceRoot": ""
}
